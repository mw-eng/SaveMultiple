<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAREREIUBAQVQ+Pj6COzs6qjY2N8syMjPkLi0u9ikp
        Kf4kJCX2Hx8f5RkZGc0UFBWvEBAQiwoKDGEFBgYxAAAAEgAAABAAAAANAAAACQAAAAUAAAADAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARkZGLEdHR4ZTUlPjWlpa/2BfX/9kY2P/ZWRk/2Nj
        Y/9gX1//WVlZ/1BPT/9FRUX/Ojk5/y4uL/8kIyT/GRgZ/w8PEOUFBQWSAgICQQAAABkAAAAXAAAAEwAA
        AA4AAAAJAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFHR0emZWVl/4KBgf+CgYL/fXx8/3d2
        d/9wcHD/aWlp/2JhYf9aWVn/UlFR/0lJSf9CQUL/Ozo6/zQ0NP8uLi7/Jycn/xQUFf8CAgOtAAAAGQAA
        ABkAAAAYAAAAFwAAABMAAAAMAAAABQAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAkZGRqhlZWX/goGB/4KB
        gf99fH3/eHd3/1BNTP9CPz//SkdG/0pHRv9KR0b/SkdG/0FBPv8eHB3/MzMz/y4uLv8nJif/FBQV/wIC
        A6wAAAAWAAAAFgAAABYAAAAWAAAAFQAAABIAAAALAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAADOjo6NUND
        Q45RUVLkWlpa/2BfYP9kZGP/bmxt/05OTv9zb3L/c29y/3Nvcv9zb3L/Tk5O/x4cHf8kIyP/GRgZ/w8P
        D+QFBQaOAgIDOgAAABIAAAASAAAAEgAAABIAAAASAAAAEgAAAAwAAAADAAAAAAAAAAAAAAAAAAAAAAAA
        AAIAAAAIAAAADTMzMiw8PDxcOzs8hzk6OaxbWVz/QT5C/0xJTP9MSUz/TElM/0xJTP86Njv/Tk5O/w8Q
        EYcMCwxcBgYHLQAAAA8AAAAPAAAADwAAAA8AAAAPAAAADwAAAA4AAAANAAAACAAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAAMAAAAGAAAACQAAAAoAAAALAAAAC1tZXP8XGB3/LSsw/y0rMP8tKzD/LSsw/xQU
        Gf9OTk7/AAAACwAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAAKAAAACQAAAAYAAAADAAAAAY2N
        i/+NjYv/jY2L/42Ni/+NjYv/jY2L/42Ni/+NjYv/jY2L/42Ni/+NjYv/jY2L/42Ni/+NjYv/jY2L/42N
        i/+NjYv/jY2L/42Ni/+NjYv/jY2L/42Ni/+NjYv/jY2L/42Ni/+NjYv/jY2L/42Ni/+NjYv/AAAAAQAA
        AAAAAAAAtra3/66urv+urq7/rq6u/66urv+urq7/rq6u/66urv+urq7/rq6u/66urv+urq7/rq6u/66u
        rv+urq7/rq6u/66urv+urq7/rq6u/66urv/NzMv/rq6u/83My/+urq7/YP6Y/2D+mP+urq7/rq6u/7a2
        t/8AAAAAAAAAAAAAAAC1tLX/0tLR/9LS0f/S0tH/0tLR/9LS0f/S0tH/0tLR/9LS0f/S0tH/0tLR/9LS
        0f/S0tH/0tLR/9LS0f/S0tH/0tLR/9LS0f/S0tH/0tLR/9LS0f/S0tH/0tLR/9LS0f/S0tH/0tLR/9LS
        0f/S0tH/tLW2/wAAAAAAAAAAAAAAALOztP/T09L/fFEM/3xRDP98UQz/fFEM/3xRDP98UQz/fFEM/3xR
        DP98UQz/fFEM/3xRDP98UQz/fFEM/3xRDP98UQz/fFEM/3xRDP98UQz/fFEM/3xRDP98UQz/fFEM/3xR
        DP98UQz/fFEM/9PT0v+ztLT/AAAAAAAAAAAAAAAAsrKz/9PU0/+KXBL/zqlY/86oWf/OqVn/zqlY/86o
        WP/OqFj/zqhZ/86oWf/OqFn/zahY/82oWP/OqFj/17h2/+bUrP/r3Lz/69y9/+vcvf/r3Lz/6929/+vc
        vf/r3bz/69y8/+vdvP+KXBL/09TT/7Kxsv8AAAAAAAAAAAAAAACwsLH/1NTU/4pcEv/LpVX/y6RV/8uk
        Vf/LpFX/y6VV/8ykVv/LpFX/y6VV/8ulVf/LpVX/zKZZ/97FlP/n1rL/59ay/+fWsv/n1rL/59ay/+fW
        sv/n1rL/59ay/+jWsv/n1rL/59ay/4pcEv/V1NT/sLCx/wAAAAAAAAAAAAAAAK+ur//W1tT/ilwS/8ig
        Uf/IoFH/yKBR/8egUv/IoFH/yKBS/8ifUf/IoFH/yKBS/8ulW//dxpb/486m/+POpv/jzqb/486m/+PO
        pv/jzqb/486m/+POpv/izaX/2MSe/9C9mP/XxJ7/iVwS/9bV1f+urq//AAAAAAAAAAAAAAAArayt/9bX
        1f+KXBL/xJpN/8SbTf/Fm03/xZtN/8WbTf/Em03/xJtN/8WaTf/KpV7/3MKT/93Gmf/dxpn/3caZ/93F
        mf/expn/3saZ/93Gmf/dxpn/3MWY/8+6j/+rmHb/kYJk/6uYdv+BVhH/1tXV/62trf8AAAAAAAAAAAAA
        AACqqqv/19fW/4pcEv/AlUj/wJVJ/8CVSP/AlUj/wJZJ/8CVSP/AlUj/yKNe/9e7iv/XvIv/2LyL/9e8
        i//XvIv/17yL/9e8i//XvIv/17yL/9e7iv/KsIL/mZBx/zJwPf9ISDP/aVxE/2hFDv/Ky8n/qqmq/wAA
        AAAAAAAAAAAAAKioqf/Y2Nj/ilwS/72RRf+8kET/vI9D/7yQQ/+8kEP/vI9D/8CWTv/PsHr/0LJ8/9Cy
        fP/QsXz/0LF8/9CxfP/Qsnz/0LJ8/9CyfP/PsXz/w6Z0/5WJZv8UdBj/FaMV/w5nFf86NiT/Qy0J/6Oj
        o/+enp//AAAAAQAAAAAAAAAAp6em/9nZ2P+KXBL/wZtZ/7yRSv+3ij7/t4o+/7iKPv+6jUP/x6Ro/8mm
        bf/Jpm3/yaZt/8mmbf/Jpm3/yaZt/8mmbf/Jpm3/yKVt/7ycZv+OgFz/FHIX/xitGP8atBr/F6sX/w9m
        FP8oIQr/ampq/35/f/8AAAAOAAAAAQAAAACkpKT/2trZ/4pcEv/Dn2P/w55k/76WVv+3i0T/tIQ7/76W
        V//Bm17/wZte/8GbXf/Bml3/wZpe/8GbXv/Bm13/wZpe/8CZXf+1kFj/inhR/xFxF/8YrRj/GrQa/xq0
        Gv8atBr/F6sX/w5kEv8/REP/UVFR/wAAADwAAAANAAAAAaGhov/b2tr/ilwS/7+aX//CnWX/xaFq/8Of
        aP/Dn2j/wJlg/7qPT/+6kE//uY9P/7mQUP+5kE//uY9Q/7mPUP+4jk//roZL/4VySP8Tchb/GK0Y/xq0
        Gv8atBr/GrQa/xq0Gv8atBr/F6sX/w9mFv8wNDP/AAAAfwAAADoAAAANoKCg/9zc2/+KXBL/vJVb/7+Y
        Yf/BnGf/xqNy/8usfv/MrYH/xqRz/8CaY/+4jlD/sYNA/7GDQP+xg0D/sINA/6d8PP+Caz7/GHQZ/xit
        GP8atBr/GrQa/xq0Gv8atBr/GrQa/xq0Gv8atBr/F6sX/w9lFv8BBAWwAAAAeQAAADKenp7/3N3c/4pc
        Ev+5kFf/vJRd/76YY//AnGr/xaR1/8inev/Kqn//za+G/82wiP/Ipnr/wJtp/7mQV/+wg0T/lnU9/yyB
        LP9Ww1b/GrQa/xq0Gv8atBr/GrQa/xq0Gv8atBr/GrQa/xq0Gv8atBr/F6sX/xBpGvMCAwR4AAAAQJuc
        nP/e3d7/ilwS/7aMU/+5kFn/u5Rf/76YZf/AnGv/w6Bx/8Wkd//IqX//yq2E/86xi//RtpL/07qY/9G/
        ov8xfzX/AWYB/wFmAf8DZgL/B2cE/wFmAf8atBr/GrQa/xq0Gv8BZgH/BWEB/w1qDf8LaAv/AWUB7hdo
        HbIAAAAampma/9/f3v+KXBL/s4hQ/7aMVv+4kFz/u5Ri/76Yaf/AnW//w6F1/8amfP/JqoL/zK+J/8+z
        kP/Rt5b/1Lyd/9fAo//axar/3cmw/9/Otv/i0r3/AWYB/xq0Gv8atBr/GrQa/wFmAf89KAj/tbS0/5qa
        mv8AAAAAAAAAAAAAAACYl5j/39/f/4pcEv+whU3/s4lU/7aMWf+5kWD/vJZm/76ZbP/BnnP/xKN5/8eo
        gP/KrIf/zbGO/9C1lP/Tupv/1r+i/9nEqf/cyK//3sy1/+HQu/8BZgH/GrQa/xq0Gv8atBr/AWYB/z0o
        CP+1tbX/mJiY/wAAAAAAAAAAAAAAAJaWlv/g39//ilwS/66CS/+xhlH/tIpX/7ePXv+6k2T/vJdq/7+c
        cP/CoXj/xaV+/8iqhf/Mr4z/z7SS/9K5mv/VvaD/2MKo/9vHrv/dy7T/4M+6/wFmAf9dyl3/O787/yS3
        JP8BZgH/PSgI/7a2tf+Wlpf/AAAAAAAAAAAAAAAAlJWU/+Dg4P+KXBL/rX9J/7CET/+yiFX/tY1c/7iR
        Yv+7lmn/vppv/8Gfdv/EpH3/x6mE/8uui//OspH/0beZ/9S8n//Xwab/2sWt/93Ks//gzrr/AWYB/6Hg
        of+h4KH/oeCh/wFmAf89KAj/tra2/5SVlf8AAAAAAAAAAAAAAACTk5P/4ODg/4pcEv+/gRX/v4EV/7+B
        Ff+/gRX/v4EV/7+BFf+/gRX/v4EV/7+BFf+/gRX/v4EV/7+BFf+/gRX/v4EV/7+BFf+/gRX/v4EV/7+B
        Ff8BZgH/oeCh/6Hgof+h4KH/AWYB/z0oCP+2trb/lJOT/wAAAAAAAAAAAAAAAJKSkv+SjYj/ko2I/5KN
        iP+SjYj/ko2I/5KNiP+SjYj/ko2I/5KNiP+SjYj/ko2I/5KNiP+SjYj/ko2I/5KNiP+SjYj/ko2I/5KN
        iP+SjYj/ko2I/wFmAf+h4KH/oeCh/6Hgof8BZgH/QD48/3dybv+SkpL/AAAAAAAAAAAAAAAAkZGR/5GR
        kf+ioqL/oqKi/6Kiov+ioqL/oqKi/6Kiov+ioqL/oqKi/6Kiov+ioqL/oqKi/6Kiov+ioqL/oqKi/6Ki
        ov+ioqL/oqKi/6Kiov+ioqL/AWYB/6Hgof+h4KH/oeCh/wFmAf9HR0f/dnZ2/5GRkf8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABZgH/oeCh/6Hgof+h4KH/AWYB/wAAAGsAAAAkAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFmAf8BZgH/AWYB/wFmAf8BZgH/AAAAJAAA
        AAwAAAAAAAAAAAAAAAAAAAAA/gAAB/gAAAHwAAAA8AAAAPAAAADwAAAA8AAAAAAAAAMAAAAHAAAABwAA
        AAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAABwAA
        AAcAAAAHAAAABwAAAAcAAAAH///4D///+A8=
</value>
  </data>
</root>